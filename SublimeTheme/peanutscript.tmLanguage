<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>To do : step, functions, end, custom colors</string>
	<key>fileTypes</key>
	<array>
		<string>peanut</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!/.*\bpeanut[\d\.]*\b</string>
	<key>name</key>
	<string>PeanutScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\b(for|return|until|while|break)\b</string>
			<key>name</key>
			<string>keyword.control.flow.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|elif|else|then)\b|\=&gt;</string>
			<key>name</key>
			<string>keyword.control.conditional.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(and|or|not)\b</string>
			<key>name</key>
			<string>keyword.operator.word.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;\=|&gt;\=|\=\=|&lt;|&gt;|\!\=</string>
			<key>name</key>
			<string>keyword.operator.comparison.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|\/|\-|\*|\%|\^</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(function)\b</string>
			<key>name</key>
			<string>storage.type.function.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^[:alpha:]_])</string>
			<key>name</key>
			<string>constant.numeric.float.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[^[:alnum:]_])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
			<key>name</key>
			<string>constant.numeric.float.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(print|printReturn|input|inputInt|clear|cls|isNumber|isString|isArray|isFunction|append|removeIndex|concat|length|run|typeof|use)\b</string>
			<key>name</key>
			<string>support.function</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(INFINITY|NEGATIVE_INF|TRUE_VALUE|FALSE_VALUE)\b</string>
			<key>name</key>
			<string>constant.language</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([1-9]+[0-9]*|0)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.peanut</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(var)\b</string>
			<key>name</key>
			<string>variable.other</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(self)</string>
			<key>name</key>
			<string>variable.language</string>
		</dict>
		<dict>
			<key>name</key>
			<string></string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.peanut</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(\n|\t)\b</string>
					<key>name</key>
					<string>constant.character.escape.peanut</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>name</key>
			<string></string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.peanut</string>
	<key>uuid</key>
	<string>4D514CEC-5F91-413F-A5BA-098DD46261F1</string>
</dict>
</plist>
